var searchIndex = {};
searchIndex['ndarray'] = {"items":[[0,"","ndarray",""],[1,"Array","","N-dimensional array"],[1,"Elements","","Array iterator"],[1,"ElementsMut","","Array iterator"],[1,"Slice","","start, end, step"],[5,"C","","Full column slice"],[6,"Dimension","",""],[9,"shape","","",0],[9,"shape_mut","","",0],[10,"size","","",0],[10,"default_strides","","",0],[10,"next_for","","Iteration -- Use self as size, and return next index after `index`\nor None if there are no more.",0],[10,"clone","","",1],[10,"zeros","","",1],[10,"new","","",1],[10,"make_unique","","",1],[10,"shape","","",1],[10,"apply_slice","","",1],[10,"slice","","",1],[10,"slice_iter","","Iterate over the sliced view",1],[10,"at","","",1],[10,"iter","","",1],[10,"index","","",1],[10,"slice_iter_mut","","Iterate over the sliced view",1],[10,"at_mut","","",1],[10,"iter_mut","","",1],[10,"reshape","","Transform the array into `shape`, must correspond\nto the same number of elements.",1],[10,"index_mut","","",1],[10,"iter1d","","",1],[10,"diag","","",1],[10,"fmt","","",1],[10,"eq","","",1],[10,"iadd","","",1],[10,"add","","",1],[10,"isub","","",1],[10,"sub","","",1],[10,"imul","","",1],[10,"mul","","",1],[10,"idiv","","",1],[10,"div","","",1],[10,"ibitand","","",1],[10,"bitand","","",1],[10,"ibitor","","",1],[10,"bitor","","",1],[10,"ibitxor","","",1],[10,"bitxor","","",1],[10,"ineg","","",1],[10,"neg","","",1],[10,"next","","",2],[10,"next","","",3],[10,"fmt","","",4],[10,"hash","","",4],[10,"eq","","",4],[10,"ne","","",4],[10,"clone","","",4],[10,"mat_mul","","",1]],"paths":[[6,"Dimension"],[1,"Array"],[1,"Elements"],[1,"ElementsMut"],[1,"Slice"]]};
initSearch(searchIndex);
